{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        // "eventGridSubscriptionName": {
        //     "type": "string",
        //     "defaultValue": "[format('sub-{0}', uniqueString(resourceGroup().id))]",
        //     "metadata": {
        //         "description": "The name of the Event Grid custom topic's subscription."
        //     }
        // },
        // "eventGridSubscriptionUrl": {
        //     "type": "string",
        //     "metadata": {
        //         "description": "The webhook URL to send the subscription events to. This URL must be valid and must be prepared to accept the Event Grid webhook URL challenge request."
        //     }
        // },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location in which the Event Grid resources should be deployed."
            }
        }
    },
    "variables": {
        "basename": "danlearn",
        "functionaName": "[concat('fn', variables('basename'), parameters('location'))]",
        "cosmosDbName": "[concat('cdb-', variables('basename'), '-', parameters('location'))]",
        "databaseName": "whatever"
    },
    "resources": [
      {
        "type": "Microsoft.DocumentDB/databaseAccounts",
        "apiVersion": "2021-04-15",
        "name": "[toLower(variables('cosmosDbName'))]",
        "location": "[parameters('location')]",
        "properties": {
          "enableFreeTier": true,
          "databaseAccountOfferType": "Standard",
          "consistencyPolicy": {
            "defaultConsistencyLevel": "Session"
          },
          "locations": [
            {
              "locationName": "[parameters('location')]"
            }
          ]
        }
      },
      {
        "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
        "apiVersion": "2021-04-15",
        "name": "[format('{0}/{1}', toLower(variables('cosmosDbName')), toLower(variables('databaseName')))]",
        "properties": {
          "resource": {
            "id": "[variables('databaseName')]"
          },
          "options": {
            "throughput": 400
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(variables('cosmosDbName')))]"
        ]
      }
    ]
}