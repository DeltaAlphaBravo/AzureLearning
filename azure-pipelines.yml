trigger:
- main

pool:
  vmImage: 'ubuntu-latest' 

steps:
- script: |
    cd SystemManagedIdentity
    dotnet restore
    dotnet build --configuration Release
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration Release --output publish_output'
    projects: '*.sln'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false
- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    artifactName: 'drop'
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'AzureLearningConn'
    subscriptionId: 'c47b44de-21a0-4fdd-9cd8-cb9fa9db4bca'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'rg-danlearn'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: './Infrastructure/azuredeploy.json'
    package: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    deploymentMode: 'Complete'
- task: AzureFunctionApp@1 # Add this at the end of your file
  inputs:
    azureSubscription: 'AzureLearningConn'
    appName: 'danlearn/fn-danlearn-EastUS'
    package: $(System.ArtifactsDirectory)/**/*.zip
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml






